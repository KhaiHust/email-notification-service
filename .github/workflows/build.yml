name: Build and Push Docker Images

on:
  push:
    branches:
      - master
#      - feature/**
      - release/**

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_TAG: ${{ github.sha }}
  SERVICES: |
    internal
    worker
    public
    migration

jobs:
  build-and-push-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker asia-east1-docker.pkg.dev --quiet

      - name: Build and Push All Service Images
        run: |
          REGION=asia-east1  # or your chosen region
          REPOSITORY=email-noti-service # your repo name
          for SERVICE in $SERVICES; do
            DOCKERFILE="devops/docker/Dockerfile-$SERVICE"
            IMAGE="$REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPOSITORY/email-notification-$SERVICE:$IMAGE_TAG"
            BUILD_VERSION="$IMAGE_TAG"
            BUILD_COMMIT_HASH="$IMAGE_TAG"
            BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            echo "Building $SERVICE using $DOCKERFILE as $IMAGE"
            docker build -f $DOCKERFILE \
              --build-arg BUILD_VERSION=$BUILD_VERSION \
              --build-arg BUILD_COMMIT_HASH=$BUILD_COMMIT_HASH \
              --build-arg BUILD_TIME="$BUILD_TIME" \
              -t $IMAGE .
            docker push $IMAGE
          done
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.GITOPS_REPO_URL }}
          token: ${{ secrets.GITOPS_REPO_TOKEN }}
          path: gitops
          ref: master

      - name: Update Helm values.yaml image tag for all services
        run: |
                REGION=asia-east1
                REPOSITORY=email-noti-service
                IMAGE_TAG="${{ github.sha }}"
                for SERVICE in $SERVICES; do
                  CHART_PATH="gitops/helm-charts/$SERVICE"
                  # Use yq to safely update YAML, install if not available
                  if ! command -v yq &>/dev/null; then
                    pip install yq
                  fi
                  yq -i \
                    ".image.repository = \"$REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPOSITORY/email-notification-$SERVICE\"" \
                    "$CHART_PATH/values.yaml"
                  yq -i ".image.tag = \"$IMAGE_TAG\"" "$CHART_PATH/values.yaml"
                done

      - name: Commit and push updated image tags to GitOps repo
        run: |
                cd gitops
                git config --global user.email ${{ secrets.CI_BOT_EMAIL }}
                git config --global user.name "CI Bot"
                git add .
                git commit -m "chore(ci): update image tags for $IMAGE_TAG [skip ci]" || echo "No changes to commit"
                git push